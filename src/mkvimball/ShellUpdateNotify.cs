/*
 * This file is placed in the public domain.
 *
 * Generated by the mkvimball vim script
 * (www.vim.org/scripts/script.php?script_id=4219).
 *
 * Exposes a function to invoke SendMessageTimeout()
 * and SHChangeNotify() from Windows API.
 *
 * Compiled and invoked from PowerShell script code.
 */

// input file contents marker: a7ec181d243150b7e40823f224174a281f46e986
//   cs refresh script marker: 109df5c5a6e4ea1b6b15ff06696822cba310586e

private static readonly IntPtr HWND_BROADCAST = new IntPtr(0xffff);
private const int WM_SETTINGCHANGE = 0x1a;
private const int SMTO_ABORTIFHUNG = 0x0002;

[System.Runtime.InteropServices.DllImport("user32.dll", SetLastError=true, CharSet=CharSet.Auto)]
    static extern
	bool SendNotifyMessage(IntPtr hWnd, uint Msg, UIntPtr wParam, IntPtr lParam);

[System.Runtime.InteropServices.DllImport("user32.dll", SetLastError = true)]
    private static extern
	IntPtr SendMessageTimeout
	    (
		IntPtr hWnd,
		int Msg,
		IntPtr wParam,
		string lParam,
		uint fuFlags,
		uint uTimeout,
		IntPtr lpdwResult
	    );

[System.Runtime.InteropServices.DllImport("Shell32.dll")]
    private static extern
	int SHChangeNotify(int eventId, int flags, IntPtr item1, IntPtr item2);


public static void Refresh()
{
    SHChangeNotify(0x8000000, 0x1000, IntPtr.Zero, IntPtr.Zero);
    SendMessageTimeout
	(
	    HWND_BROADCAST,
	    WM_SETTINGCHANGE,
	    IntPtr.Zero,
	    null,
	    SMTO_ABORTIFHUNG,
	    5000,
	    IntPtr.Zero
	);
}

